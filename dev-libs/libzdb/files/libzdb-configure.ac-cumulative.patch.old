diff -r 414bab11638d configure.ac
--- a/configure.ac	Fri Apr 09 20:13:53 2010 +0300
+++ b/configure.ac	Fri Apr 09 23:34:27 2010 +0300
@@ -107,6 +106,9 @@
         profile="false"
     ]
 )
+PKG_PROG_PKG_CONFIG
+
+openssl="false"
 
 AC_ARG_ENABLE([openssl],
         AS_HELP_STRING([--enable-openssl(=<path>)], 
@@ -116,21 +118,16 @@
                 be given to specify the top-level directory to search for openssl to
                 link with]),
      [
-        openssl="true"
-        if test "x$enableval" = "xyes"; then
-		AC_CHECK_LIB([ssl], [SSL_library_init], [], [AC_MSG_ERROR([libssl not found])])
-		AC_CHECK_LIB([crypto], [SHA1_Init], [], [AC_MSG_ERROR([libcrypto not found])])
-	else
-                AC_MSG_CHECKING([for openssl in $enableval])
-                LDFLAGS="-L$enableval/lib -lssl -lcrypto $LDFLAGS "
-                CPPFLAGS="-I$enableval/include $CPPFLAGS"
-                if test -r "$enableval/lib/libssl.a" -a -r "$enableval/lib/libcrypto.a"; then
-                        AC_MSG_RESULT([ok])
-                else
-                       AC_MSG_ERROR([openssl not found in $enableval])
-                fi
-        fi
-     ],[openssl="false"])
+     AS_IF([test "x$enable_openssl" != "xno"], [
+        PKG_CHECK_MODULES([openssl], [openssl >= 0.9]) 
+       AC_CHECK_LIB([ssl], [SSL_library_init], [], [AC_MSG_ERROR([libssl not found])])
+       AC_CHECK_LIB([crypto], [SHA1_Init], [], [AC_MSG_ERROR([libcrypto not found])])
+       LDFLAGS="$LDFLAGS `$PKG_CONFIG --libs-only-l  openssl` "
+       openssl="true"
+       ])
+
+     ],
+     [openssl="false"])
 
 AC_ARG_ENABLE(sqliteunlock,
 	AS_HELP_STRING([--enable-sqliteunlock], 
@@ -140,6 +137,7 @@
                 and SQLite is used from a multi-threaded program.]),
     [
         if test "x$enableval" = "xyes" ; then
+		PKG_CHECK_MODULES([sqlite3], [ sqlite3 >= 3.6.12 ])
 		SQLITEUNLOCK=1
                 CFLAGS="$CFLAGS -DSQLITEUNLOCK"
 	else
@@ -236,7 +234,7 @@
 fi
 AM_CONDITIONAL([WITH_MYSQL], test "xyes" = "x$mysql")
 
-postgresql="yes"
+postgresql="no"
 AC_MSG_CHECKING(for postgresql)
 AC_ARG_WITH([postgresql], 
         AS_HELP_STRING([--with-postgresql(=<path>)], 
@@ -283,47 +281,33 @@
 fi
 AM_CONDITIONAL([WITH_POSTGRESQL], test "xyes" = "x$postgresql")
 
-sqlite="yes"
+sqlite="no"
 AC_MSG_CHECKING(for SQLite3)
 AC_ARG_WITH([sqlite], 
         AS_HELP_STRING([--with-sqlite=<path>], 
                 [prefix of SQLite installation. e.g. /usr/local/sqlite3 or /usr]), 
         [
-        if test "xno" = "x$with_sqlite"; then
-                AC_MSG_RESULT([no])
-                sqlite="no"
-        else
+        if test "x$with_sqlite" != "xno"; then
+		 PKG_CHECK_MODULES([sqlite3], [ sqlite3 ])
                 AC_MSG_RESULT([yes])
                 svd_LDFLAGS=$LDFLAGS
                 svd_CPPFLAGS=$CPPFLAGS
                 LDFLAGS="-L$with_sqlite/lib $LDFLAGS"
                 CPPFLAGS="-I$with_sqlite/include $CPPFLAGS"
-                AC_CHECK_HEADERS([sqlite3.h], [
-                        sqlite="yes"
-                        if test -r "$with_sqlite/lib/libsqlite3.a"; then
-                                DBCPPFLAGS="$DBCPPFLAGS -I$with_sqlite/include"
-                                DBLDFLAGS="$DBLDFLAGS -L$with_sqlite/lib/ -lsqlite3"
-                        else
-                                sqlite="no"
-                        fi
-                ], [sqlite="no"])
-                LDFLAGS=$svd_LDFLAGS
-                CPPFLAGS=$svd_CPPFLAGS
+		AC_CHECK_HEADERS([sqlite3.h], [
+			 sqlite="yes"
+			  DBCPPFLAGS="$DBCPPFLAGS `$PKG_CONFIG --cflags-only-I sqlite3`"
+			  DBLDFLAGS="$DBLDFLAGS `$PKG_CONFIG  --libs-only-l sqlite3`"]) 
         fi
         ], 
         [
-                AC_MSG_RESULT([yes])
-                AC_CHECK_LIB([sqlite3], [sqlite3_open], [], [sqlite="no"])
+                sqlite="no"
         ])
 if test "xyes" = "x$sqlite"; then
-        AC_DEFINE([HAVE_LIBSQLITE3])
+        AC_DEFINE([HAVE_LIBSQLITE3], 1,  [Define to 1 to enable SQLite3])
 fi
 AM_CONDITIONAL([WITH_SQLITE], test "xyes" = "x$sqlite")
 
-if test "xno" = "x$postgresql" -a "xno" = "x$mysql" -a "xno" = "x$sqlite"; then
-        AC_MSG_ERROR([No available database found or selected. Try configure --help])
-fi
-
 AC_SUBST(DBLDFLAGS)
 AC_SUBST(DBCPPFLAGS)
 
